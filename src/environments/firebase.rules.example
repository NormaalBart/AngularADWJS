rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Matches any document in the 'projects' collection
    match /projects/{project} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow delete: if request.auth.uid == resource.data.ownerId;
      allow update: if request.auth != null;
    }
    match /invites/{inviteId} {
      allow create, delete, read, write: if request.auth != null;
    }
    match /categories/{categorieId} {
      allow create, delete, read, write: if request.auth != null;
    }
		match /mutations/{mutationsId} {
      allow create, delete, read, write: if request.auth != null;
    }
    match /users/{userId} {
      // Allow read access
      allow read: if request.auth != null;
      
      allow create: if request.auth != null;
      
      allow delete: if false;
      
      allow update: if isOwner(userId);

      function isOwner(userId) {
        return request.auth != null && request.auth.uid == userId;
      }

      function canReadSpecificFields() {
        return request.auth != null && 
               (resource.data.keys().hasAll(['email', 'id', 'displayName']) &&
                resource.data.size() == 3);
      }
    }
  }
}

